/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package freepass.tampilan;

import freepass.control.Submit_hadir;
import freepass.model.Pegawe;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.sql.Time;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.Timer;

public class AbsensiPegawai extends javax.swing.JFrame {
    private List<Pegawe> ambil = new ArrayList<Pegawe>();    
    public AbsensiPegawai() {
        initComponents();
        setWaktu();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        rdKeluar = new javax.swing.JRadioButton();
        rdMasuk = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtNIP = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblJudul = new javax.swing.JLabel();
        lblTanggal = new javax.swing.JLabel();
        lblJam = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Login Admin");
        setAutoRequestFocus(false);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setFocusable(false);
        setFont(new java.awt.Font("Segoe UI Light", 0, 10)); // NOI18N
        setMinimumSize(new java.awt.Dimension(600, 450));
        setUndecorated(true);
        setOpacity(0.95F);
        setResizable(false);

        buttonGroup1.add(rdKeluar);
        rdKeluar.setText("Absen Keluar");

        buttonGroup1.add(rdMasuk);
        rdMasuk.setText("Absen Masuk");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/freepass/img/exit.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Masukkan NIP. :", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        txtNIP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNIPKeyReleased(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(txtNIP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(txtNIP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Info Absen"));

        jPanel3.setBackground(new java.awt.Color(0, 21, 132));

        lblJudul.setFont(new java.awt.Font("Swis721 BlkCn BT", 2, 24)); // NOI18N
        lblJudul.setForeground(new java.awt.Color(255, 255, 255));
        lblJudul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/freepass/img/customers.png"))); // NOI18N
        lblJudul.setText("Absensi Pegawai");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(lblJudul, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 210, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(lblJudul)
        );

        lblTanggal.setFont(new java.awt.Font("Book Antiqua", 0, 14)); // NOI18N
        lblTanggal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/freepass/img/IconDate.png"))); // NOI18N
        lblTanggal.setText("Sabtu, 21 Mei 2016");

        lblJam.setFont(new java.awt.Font("Book Antiqua", 0, 24)); // NOI18N
        lblJam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/freepass/img/IconClock.png"))); // NOI18N
        lblJam.setText("07 : 08 : 55");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(rdMasuk)
                            .add(rdKeluar))
                        .add(42, 42, 42)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblTanggal, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(lblJam, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(580, 580, 580)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(rdMasuk)
                        .add(7, 7, 7)
                        .add(rdKeluar))
                    .add(layout.createSequentialGroup()
                        .add(lblTanggal)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(lblJam)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtNIPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNIPKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String nip = txtNIP.getText();;
            boolean status_pegawai, status_hadir;
            Pegawe pegawai = new Pegawe();            
            pegawai.setNIP(nip);
            if("".equals(nip)){
                JOptionPane.showMessageDialog(rootPane, "<error>NIP tidak ditemukan !!\nPastikan Anda mengimput NIP dengan benar !!", "Error", JOptionPane.ERROR_MESSAGE);
                txtNIP.requestFocus();
            }else{        
                Submit_hadir kehadiran = new Submit_hadir();
                try{
                    //cek apakah pegawai ada di tabel pegawai
                    status_pegawai = kehadiran.cek_pegawai(pegawai);
                    if(status_pegawai == true){
                        //cek dia harusnya masuk jam berapa
                        Date jam = new Date();
                        
                        SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");
                        String jam_sekarang = format.format(jam.getTime());
                        
                        ambil = kehadiran.ambil(pegawai);
                        
                        String data[] = new String[4];
                        for(Pegawe h : ambil){
                            data[0] = h.getNama();
                            data[1] = h.getJabatan();
                            data[2] = h.getId_Jam();
                            data[3] = h.getAlamat();                       
                        }
                        Time waktu[] = new Time[4];
                        for(Pegawe h : ambil){
                            waktu[0] = h.getMasukStart();
                            waktu[1] = h.getKerjaStart();
                            waktu[2] = h.getKerjaEnd();
                            waktu[3] = h.getKeluarEnd();
                        }        
                                       
                        long lj = Time.valueOf(jam_sekarang).getTime();
                        long mm = waktu[0].getTime();
                        long tg = waktu[1].getTime();
                        long mk = waktu[2].getTime();
                        long ks = waktu[3].getTime();
                        status_hadir = kehadiran.cek_kehadiran(pegawai);
                        
                        //Masuk berhasil
                        if(rdMasuk.isSelected()){
                            if(lj >= mm  && lj <= tg && status_hadir){
                                kehadiran.masuk(pegawai.getNIP());
                                JOptionPane.showMessageDialog(rootPane, data[0] + " ("+data[1]+")\nBerhasil masuk", "Berhasil", JOptionPane.INFORMATION_MESSAGE);
                                txtNIP.requestFocus();
                            }
                            if(!(lj >= mm  && lj <= tg )){
                                JOptionPane.showMessageDialog(rootPane, "<error> Anda tidak dipekenankan masuk, \nWaktu cek in sudah habis...\nWaktu Cekin : "+waktu[0]+" s/d "+waktu[1], "Error", JOptionPane.ERROR_MESSAGE);
                                txtNIP.requestFocus();
                            }else if(!status_hadir){
                                JOptionPane.showMessageDialog(rootPane, "<error> Anda sudah melakukan masuk (cek in) sebelumnya!!", "Error", JOptionPane.ERROR_MESSAGE);
                                txtNIP.requestFocus();
                            }
                        }
                        
                        //Absen Keluar
                        if(rdKeluar.isSelected()){
                            if(!status_hadir && mk <= lj && lj <= ks){
                                kehadiran.keluar(pegawai.getNIP());
                                JOptionPane.showMessageDialog(rootPane, data[0] + " ("+data[1]+")\nBerhasil Keluar (Cek Out)", "Berhasil", JOptionPane.INFORMATION_MESSAGE);
                                txtNIP.requestFocus();
                            }
                            if(status_hadir){
                                JOptionPane.showMessageDialog(rootPane, "<error> Anda belum melakukan masuk (cek in) sebelumnya!!", "Error", JOptionPane.ERROR_MESSAGE);
                                txtNIP.requestFocus();
                            }else if(!(mk <= lj && lj <= ks)){
                                JOptionPane.showMessageDialog(rootPane, "<error> Anda tidak dipekenankan keluar, \nBelum waktunya cek out...\nWaktu Cekout : "+waktu[2]+" s/d "+waktu[3], "Error", JOptionPane.ERROR_MESSAGE);
                                txtNIP.requestFocus();
                            }
                        }
                    }
                }catch(SQLException ex){
                    JOptionPane.showMessageDialog(rootPane, "<error>Kesalahan pada Database !!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_txtNIPKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AbsensiPegawai().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblJam;
    private javax.swing.JLabel lblJudul;
    private javax.swing.JLabel lblTanggal;
    private javax.swing.JRadioButton rdKeluar;
    private javax.swing.JRadioButton rdMasuk;
    private javax.swing.JTextField txtNIP;
    // End of variables declaration//GEN-END:variables

    private void setWaktu() {
        Timer timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Date date=new Date();
                lblTanggal.setText(DateFormat.getDateInstance(DateFormat.FULL,new Locale("in","ID")).format(date));
                lblJam.setText(new SimpleDateFormat("HH : mm : ss").format(date));
                repaint();
            }
        });
        timer.start();
    }
}
